{
  "swagger" : "2.0",
  "info" : {
    "version" : "0.0.2",
    "title" : "Headwind MDM API"
  },
  "basePath" : "/rest",
  "tags" : [ {
    "name" : "Notifications"
  }, {
    "name" : "Audit"
  }, {
    "name" : "Plugin - Device Log"
  }, {
    "name" : "Messaging plugin"
  }, {
    "name" : "Application"
  }, {
    "name" : "Configuration"
  }, {
    "name" : "Device"
  }, {
    "name" : "Files"
  }, {
    "name" : "Device Group"
  }, {
    "name" : "Hint"
  }, {
    "name" : "Icons"
  }, {
    "name" : "Password-Reset"
  }, {
    "name" : "Mobile client API"
  }, {
    "name" : "Push API"
  }, {
    "name" : "QR-code"
  }, {
    "name" : "Settings"
  }, {
    "name" : "Device data synchronization"
  }, {
    "name" : "User"
  }, {
    "name" : "Authentication"
  } ],
  "schemes" : [ "http" ],
  "paths" : {
    "/notifications/device/{deviceId}" : {
      "get" : {
        "tags" : [ "Notifications" ],
        "summary" : "Get device notifications",
        "description" : "Gets the notifications for device from the MDM server.",
        "operationId" : "getPushMessages",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "deviceId",
          "in" : "path",
          "description" : "An identifier of device within MDM server",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/PlainPushMessage"
              }
            }
          }
        }
      }
    },
    "/plugins/audit/private/log/search" : {
      "post" : {
        "tags" : [ "Audit" ],
        "summary" : "Search logs",
        "description" : "Gets the list of audit log records matching the specified filter",
        "operationId" : "getLogs",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/AuditLogFilter"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PaginatedData"
            }
          }
        },
        "security" : [ {
          "Bearer Token" : [ ]
        } ]
      }
    },
    "/plugins/devicelog/devicelog-plugin-settings/private" : {
      "get" : {
        "tags" : [ "Plugin - Device Log" ],
        "summary" : "Get settings",
        "description" : "Gets the plugin settings for current user. If there are none found in DB then returns default ones.",
        "operationId" : "getSettings",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/DeviceLogPluginSettings"
            }
          }
        },
        "security" : [ {
          "Bearer Token" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "Plugin - Device Log" ],
        "summary" : "Create or update plugin settings",
        "description" : "Creates a new plugin settings record (if id is not provided) or updates existing one otherwise",
        "operationId" : "saveMainSettings",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          }
        },
        "security" : [ {
          "Bearer Token" : [ ]
        } ]
      }
    },
    "/plugins/devicelog/devicelog-plugin-settings/private/rule" : {
      "put" : {
        "tags" : [ "Plugin - Device Log" ],
        "summary" : "Create or update plugin settings rule",
        "description" : "Creates a new plugin settings rule record (if id is not provided) or updates existing one otherwise",
        "operationId" : "saveSettingsRule",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          }
        },
        "security" : [ {
          "Bearer Token" : [ ]
        } ]
      }
    },
    "/plugins/devicelog/devicelog-plugin-settings/private/rule/{id}" : {
      "delete" : {
        "tags" : [ "Plugin - Device Log" ],
        "summary" : "Delete rule",
        "description" : "Delete an existing plugin settings rule",
        "operationId" : "removeRule",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Rule ID",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          }
        }
      }
    },
    "/plugins/devicelog/log/private/search" : {
      "post" : {
        "tags" : [ "Plugin - Device Log" ],
        "summary" : "Search logs",
        "description" : "Gets the list of log records matching the specified filter",
        "operationId" : "getLogs_1",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/DeviceLogFilter"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PaginatedData"
            }
          }
        },
        "security" : [ {
          "Bearer Token" : [ ]
        } ]
      }
    },
    "/plugins/devicelog/log/private/search/export" : {
      "post" : {
        "tags" : [ "Plugin - Device Log" ],
        "summary" : "Exports logs",
        "description" : "Export the list of log records matching the specified filter",
        "operationId" : "exportLogs",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/DeviceLogFilter"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "Bearer Token" : [ ]
        } ]
      }
    },
    "/plugins/devicelog/log/list/{deviceNumber}" : {
      "post" : {
        "tags" : [ "Plugin - Device Log" ],
        "summary" : "Upload logs",
        "description" : "Uploads the list of log records from device to server",
        "operationId" : "uploadLogs",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "deviceNumber",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/UploadedDeviceLogRecord"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          }
        }
      }
    },
    "/plugins/devicelog/log/rules/{deviceNumber}" : {
      "get" : {
        "tags" : [ "Plugin - Device Log" ],
        "summary" : "Get log rules",
        "description" : "Gets the list of log rules for device",
        "operationId" : "getDeviceLogRules",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "deviceNumber",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/AppliedDeviceLogRule"
              }
            }
          }
        }
      }
    },
    "/plugins/messaging/{id}" : {
      "delete" : {
        "tags" : [ "Messaging plugin" ],
        "summary" : "Delete message",
        "description" : "Delete an existing message",
        "operationId" : "removeDevice",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Message ID",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          }
        }
      }
    },
    "/plugins/messaging/private/search" : {
      "post" : {
        "tags" : [ "Messaging plugin" ],
        "summary" : "Search messages",
        "description" : "Gets the list of message records matching the specified filter",
        "operationId" : "getMessages",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/MessageFilter"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PaginatedData"
            }
          }
        },
        "security" : [ {
          "Bearer Token" : [ ]
        } ]
      }
    },
    "/plugins/messaging/private/send" : {
      "post" : {
        "tags" : [ "Messaging plugin" ],
        "summary" : "Send new message",
        "description" : "Sends a new message to a specified device.",
        "operationId" : "sendMessage",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/SendRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          }
        },
        "security" : [ {
          "Bearer Token" : [ ]
        } ]
      }
    },
    "/plugins/messaging/private/purge/{days}" : {
      "get" : {
        "tags" : [ "Messaging plugin" ],
        "summary" : "Purge old messages",
        "description" : "Deletes all messages older than a specified number of days.",
        "operationId" : "purgeMessages",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "days",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          }
        },
        "security" : [ {
          "Bearer Token" : [ ]
        } ]
      }
    },
    "/plugins/messaging/public/status/{id}/{status}" : {
      "get" : {
        "tags" : [ "Messaging plugin" ],
        "summary" : "Sets the message status",
        "description" : "Marks message as delivered or read.",
        "operationId" : "setMessageStatus",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "status",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          }
        }
      }
    },
    "/private/applications/validatePkg" : {
      "put" : {
        "tags" : [ "Application" ],
        "summary" : "Validate application package",
        "description" : "Validate the application package ID for uniqueness",
        "operationId" : "validateApplication",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Application"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Application"
              }
            }
          }
        },
        "security" : [ {
          "Bearer Token" : [ ]
        } ]
      }
    },
    "/private/applications/search/{value}" : {
      "get" : {
        "tags" : [ "Application" ],
        "summary" : "Search applications",
        "description" : "Search applications meeting the specified filter value",
        "operationId" : "searchApplications",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "value",
          "in" : "path",
          "description" : "A filter value",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Application"
              }
            }
          }
        },
        "security" : [ {
          "Bearer Token" : [ ]
        } ]
      }
    },
    "/private/applications/autocomplete" : {
      "post" : {
        "tags" : [ "Application" ],
        "summary" : "Get app ids and names for autocompletions",
        "description" : "",
        "operationId" : "getApplicationsForAutocomplete",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          }
        },
        "security" : [ {
          "Bearer Token" : [ ]
        } ]
      }
    },
    "/private/applications/{id}/versions" : {
      "get" : {
        "tags" : [ "Application" ],
        "summary" : "Get application versions",
        "description" : "Gets the list of versions for specified application",
        "operationId" : "getAllApplicationVersions",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Application ID",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ApplicationVersion"
              }
            }
          }
        },
        "security" : [ {
          "Bearer Token" : [ ]
        } ]
      }
    },
    "/private/applications/{id}" : {
      "get" : {
        "tags" : [ "Application" ],
        "summary" : "Get application",
        "description" : "Gets the details for specified application",
        "operationId" : "getApplication",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Application ID",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Application"
            }
          }
        },
        "security" : [ {
          "Bearer Token" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Application" ],
        "summary" : "Delete application",
        "description" : "Delete an existing application",
        "operationId" : "removeApplication",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Application ID",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          }
        },
        "security" : [ {
          "Bearer Token" : [ ]
        } ]
      }
    },
    "/private/applications/android" : {
      "put" : {
        "tags" : [ "Application" ],
        "summary" : "Create or update Android application",
        "description" : "Create a new Android application (if id is not provided) or update existing one otherwise.",
        "operationId" : "updateApplication",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Application"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          }
        },
        "security" : [ {
          "Bearer Token" : [ ]
        } ]
      }
    },
    "/private/applications/web" : {
      "put" : {
        "tags" : [ "Application" ],
        "summary" : "Create or update Web-page application",
        "description" : "Create a new Web-page application (if id is not provided) or update existing one otherwise.",
        "operationId" : "updateWebApplication",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Application"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          }
        },
        "security" : [ {
          "Bearer Token" : [ ]
        } ]
      }
    },
    "/private/applications/versions" : {
      "put" : {
        "tags" : [ "Application" ],
        "summary" : "Create or update application version",
        "description" : "Create a new application version (if id is not provided) or update existing one otherwise.",
        "operationId" : "updateApplicationVersion",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ApplicationVersion"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          }
        },
        "security" : [ {
          "Bearer Token" : [ ]
        } ]
      }
    },
    "/private/applications/versions/{id}" : {
      "delete" : {
        "tags" : [ "Application" ],
        "summary" : "Delete application version",
        "description" : "Delete an existing application version",
        "operationId" : "removeApplicationVersion",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Application Version ID",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          }
        },
        "security" : [ {
          "Bearer Token" : [ ]
        } ]
      }
    },
    "/private/applications/configurations/{id}" : {
      "get" : {
        "tags" : [ "Application" ],
        "summary" : "Get application configurations",
        "description" : "Gets the list of configurations using requested application",
        "operationId" : "getApplicationConfigurations",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Application ID",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ApplicationConfigurationLink"
              }
            }
          }
        },
        "security" : [ {
          "Bearer Token" : [ ]
        } ]
      }
    },
    "/private/applications/version/{id}/configurations" : {
      "get" : {
        "tags" : [ "Application" ],
        "summary" : "Get application version configurations",
        "description" : "Gets the list of configurations using requested application version",
        "operationId" : "getApplicationVersionConfigurations",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Application Version ID",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ApplicationConfigurationLink"
              }
            }
          }
        },
        "security" : [ {
          "Bearer Token" : [ ]
        } ]
      }
    },
    "/private/applications/configurations" : {
      "post" : {
        "tags" : [ "Application" ],
        "summary" : "Update application configurations",
        "description" : "Updates the list of configurations using requested application",
        "operationId" : "updateApplicationConfigurations",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/LinkConfigurationsToAppRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          }
        },
        "security" : [ {
          "Bearer Token" : [ ]
        } ]
      }
    },
    "/private/applications/version/configurations" : {
      "post" : {
        "tags" : [ "Application" ],
        "summary" : "Update application version configurations",
        "description" : "Updates the list of configurations using requested application version",
        "operationId" : "updateApplicationVersionConfigurations",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/LinkConfigurationsToAppVersionRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          }
        },
        "security" : [ {
          "Bearer Token" : [ ]
        } ]
      }
    },
    "/private/applications/search" : {
      "get" : {
        "tags" : [ "Application" ],
        "summary" : "Get all applications",
        "description" : "Gets the list of all available applications",
        "operationId" : "getAllApplications",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Application"
              }
            }
          }
        },
        "security" : [ {
          "Bearer Token" : [ ]
        } ]
      }
    },
    "/private/configurations" : {
      "put" : {
        "tags" : [ "Configuration" ],
        "summary" : "Create or update configuration",
        "description" : "Creates a new configuration (if id is not provided) or update existing one otherwise.",
        "operationId" : "updateConfiguration",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Configuration"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          }
        },
        "security" : [ {
          "Bearer Token" : [ ]
        } ]
      }
    },
    "/private/configurations/search" : {
      "get" : {
        "tags" : [ "Configuration" ],
        "summary" : "Get configurations",
        "description" : "Gets the list of available configurations",
        "operationId" : "getAllConfigurations",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Configuration"
              }
            }
          }
        },
        "security" : [ {
          "Bearer Token" : [ ]
        } ]
      }
    },
    "/private/configurations/search/{value}" : {
      "get" : {
        "tags" : [ "Configuration" ],
        "summary" : "Search configurations",
        "description" : "Searches configurations meeting the specified filter value",
        "operationId" : "searchConfigurations",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "value",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Configuration"
              }
            }
          }
        },
        "security" : [ {
          "Bearer Token" : [ ]
        } ]
      }
    },
    "/private/configurations/application/upgrade" : {
      "put" : {
        "tags" : [ "Configuration" ],
        "summary" : "Upgrade configuration application",
        "description" : "Upgrades the application used by configuration to most recent version",
        "operationId" : "upgradeConfiguration",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UpgradeConfigurationApplicationRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Configuration"
            }
          }
        },
        "security" : [ {
          "Bearer Token" : [ ]
        } ]
      }
    },
    "/private/configurations/copy" : {
      "put" : {
        "tags" : [ "Configuration" ],
        "summary" : "Copy configuration",
        "description" : "Creates a new copy of configuration referenced by the id and names it with provided name.",
        "operationId" : "copyConfiguration",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Configuration"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          }
        },
        "security" : [ {
          "Bearer Token" : [ ]
        } ]
      }
    },
    "/private/configurations/{id}" : {
      "get" : {
        "tags" : [ "Configuration" ],
        "summary" : "Get configuration",
        "description" : "Gets the details for configuration referenced by the specified ID",
        "operationId" : "getConfigurationById",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Configuration"
            }
          }
        },
        "security" : [ {
          "Bearer Token" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Configuration" ],
        "summary" : "Delete configuration",
        "description" : "Deletes a configuration referenced by the specified ID.",
        "operationId" : "removeConfiguration",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Configuration ID",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          }
        },
        "security" : [ {
          "Bearer Token" : [ ]
        } ]
      }
    },
    "/private/configurations/applications/{id}" : {
      "get" : {
        "tags" : [ "Configuration" ],
        "summary" : "Get configuration applications",
        "description" : "Gets the list of all applications in context of usage by the requested configuration",
        "operationId" : "getConfigurationApplications",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Configuration ID",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Application"
              }
            }
          }
        },
        "security" : [ {
          "Bearer Token" : [ ]
        } ]
      }
    },
    "/private/configurations/autocomplete" : {
      "post" : {
        "tags" : [ "Configuration" ],
        "summary" : "Get configurations for autocompletions",
        "description" : "",
        "operationId" : "getConfigurations",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          }
        },
        "security" : [ {
          "Bearer Token" : [ ]
        } ]
      }
    },
    "/private/devices/search" : {
      "post" : {
        "tags" : [ "Device" ],
        "summary" : "Search devices",
        "description" : "Search devices meeting the specified filter value",
        "operationId" : "getAllDevices",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/DeviceSearchRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/DeviceListView"
            }
          }
        },
        "security" : [ {
          "Bearer Token" : [ ]
        } ]
      }
    },
    "/private/devices/{id}/applicationSettings/notify" : {
      "post" : {
        "tags" : [ "Device" ],
        "summary" : "Notify device on update",
        "description" : "Sends a notification to device on application settings update",
        "operationId" : "notifyDevicesOnUpdate",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          }
        },
        "security" : [ {
          "Bearer Token" : [ ]
        } ]
      }
    },
    "/private/devices/{id}/applicationSettings" : {
      "get" : {
        "tags" : [ "Device" ],
        "summary" : "Get device application settings",
        "description" : "Get application settings set at device level",
        "operationId" : "getDeviceApplicationSettings",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Device ID",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          }
        },
        "security" : [ {
          "Bearer Token" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Device" ],
        "summary" : "Save device application settings",
        "description" : "Save application settings set at device level",
        "operationId" : "saveDeviceApplicationSettings",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Device ID",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/ApplicationSetting"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          }
        },
        "security" : [ {
          "Bearer Token" : [ ]
        } ]
      }
    },
    "/private/devices/autocomplete" : {
      "post" : {
        "tags" : [ "Device" ],
        "summary" : "",
        "description" : "",
        "operationId" : "getDevicesForAutocomplete",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          }
        },
        "security" : [ {
          "Bearer Token" : [ ]
        } ]
      }
    },
    "/private/devices" : {
      "put" : {
        "tags" : [ "Device" ],
        "summary" : "Create or update device",
        "description" : "Create a new device (if id is not provided) or update existing one otherwise.",
        "operationId" : "updateDevice",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Device"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          }
        },
        "security" : [ {
          "Bearer Token" : [ ]
        } ]
      }
    },
    "/private/devices/{id}" : {
      "delete" : {
        "tags" : [ "Device" ],
        "summary" : "Delete device",
        "description" : "Delete an existing device",
        "operationId" : "removeDevice_1",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Device ID",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          }
        },
        "security" : [ {
          "Bearer Token" : [ ]
        } ]
      }
    },
    "/private/devices/deleteBulk" : {
      "post" : {
        "tags" : [ "Device" ],
        "summary" : "Delete bulk devices",
        "description" : "Delete multiple devices at once",
        "operationId" : "removeBulkDevices",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Device"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          }
        },
        "security" : [ {
          "Bearer Token" : [ ]
        } ]
      }
    },
    "/private/devices/{id}/description" : {
      "post" : {
        "tags" : [ "Device" ],
        "summary" : "Save device description",
        "description" : "Updates existing device description",
        "operationId" : "saveDeviceDescription",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Device ID",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          }
        },
        "security" : [ {
          "Bearer Token" : [ ]
        } ]
      }
    },
    "/private/web-ui-files/search" : {
      "get" : {
        "tags" : [ "Files" ],
        "summary" : "Get all files",
        "description" : "Gets the list of all available files",
        "operationId" : "getAllFiles",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/HFile"
              }
            }
          }
        },
        "security" : [ {
          "Bearer Token" : [ ]
        } ]
      }
    },
    "/private/web-ui-files/remove" : {
      "post" : {
        "tags" : [ "Files" ],
        "summary" : "Remove a file",
        "description" : "Removes the file from the MDM server",
        "operationId" : "removeFile",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/HFile"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          }
        },
        "security" : [ {
          "Bearer Token" : [ ]
        } ]
      }
    },
    "/private/web-ui-files/move" : {
      "post" : {
        "tags" : [ "Files" ],
        "summary" : "Complete file upload",
        "description" : "Commits the file upload to MDM server. Returns the uploaded file data",
        "operationId" : "moveFile",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/MoveFileRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/HFile"
            }
          }
        },
        "security" : [ {
          "Bearer Token" : [ ]
        } ]
      }
    },
    "/private/web-ui-files/search/{value}" : {
      "get" : {
        "tags" : [ "Files" ],
        "summary" : "Search files",
        "description" : "Search files meeting the specified filter value",
        "operationId" : "getFilesByName",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "value",
          "in" : "path",
          "description" : "A filter value",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/HFile"
              }
            }
          }
        },
        "security" : [ {
          "Bearer Token" : [ ]
        } ]
      }
    },
    "/private/web-ui-files/apps/{url}" : {
      "get" : {
        "tags" : [ "Files" ],
        "summary" : "Get applications",
        "description" : "Gets the list of applications using the file",
        "operationId" : "getApplicationsForFile",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "url",
          "in" : "path",
          "description" : "An URL referencing the file",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Application"
              }
            }
          }
        },
        "security" : [ {
          "Bearer Token" : [ ]
        } ]
      }
    },
    "/private/web-ui-files" : {
      "post" : {
        "tags" : [ "Files" ],
        "summary" : "Upload file",
        "description" : "Uploads the file to server. Returns a path to uploaded file",
        "operationId" : "uploadFiles",
        "consumes" : [ "multipart/form-data" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "file",
          "in" : "formData",
          "required" : false,
          "type" : "file"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/FileUploadResult"
            }
          }
        },
        "security" : [ {
          "Bearer Token" : [ ]
        } ]
      }
    },
    "/private/web-ui-files/{filePath}" : {
      "get" : {
        "tags" : [ "Files" ],
        "summary" : "Download a file",
        "description" : "Downloads the content of the file",
        "operationId" : "downloadFile",
        "produces" : [ "application/octet-stream" ],
        "parameters" : [ {
          "name" : "filePath",
          "in" : "path",
          "description" : "A path to a file",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "Bearer Token" : [ ]
        } ]
      }
    },
    "/private/groups/{id}" : {
      "delete" : {
        "tags" : [ "Device Group" ],
        "summary" : "Delete device group",
        "description" : "Delete an existing device group",
        "operationId" : "removeGroup",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Device group ID",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          }
        },
        "security" : [ {
          "Bearer Token" : [ ]
        } ]
      }
    },
    "/private/groups/search" : {
      "get" : {
        "tags" : [ "Device Group" ],
        "summary" : "Get all device groups",
        "description" : "Gets the list of all available device groups",
        "operationId" : "getAllGroups",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Group"
              }
            }
          }
        },
        "security" : [ {
          "Bearer Token" : [ ]
        } ]
      }
    },
    "/private/groups/search/{value}" : {
      "get" : {
        "tags" : [ "Device Group" ],
        "summary" : "Search device groups",
        "description" : "Search device groups meeting the specified filter value",
        "operationId" : "searchGroups",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "value",
          "in" : "path",
          "description" : "A filter value",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Group"
              }
            }
          }
        },
        "security" : [ {
          "Bearer Token" : [ ]
        } ]
      }
    },
    "/private/groups/autocomplete" : {
      "post" : {
        "tags" : [ "Device Group" ],
        "summary" : "Get group ids/names for autocomplete",
        "description" : "",
        "operationId" : "getGroupsForAutocomplete",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          }
        },
        "security" : [ {
          "Bearer Token" : [ ]
        } ]
      }
    },
    "/private/groups" : {
      "put" : {
        "tags" : [ "Device Group" ],
        "summary" : "Create or update device group",
        "description" : "Create a new device group (if id is not provided) or update existing one otherwise.",
        "operationId" : "updateGroup",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Group"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          }
        },
        "security" : [ {
          "Bearer Token" : [ ]
        } ]
      }
    },
    "/private/hints/history" : {
      "get" : {
        "tags" : [ "Hint" ],
        "summary" : "Get shown hints",
        "description" : "Gets the list of identifiers for the hints already presented to current user",
        "operationId" : "getShownHints",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "Bearer Token" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Hint" ],
        "summary" : "On hint shown",
        "description" : "Marks the hint as shown to current user",
        "operationId" : "markHintAsShown",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          }
        },
        "security" : [ {
          "Bearer Token" : [ ]
        } ]
      }
    },
    "/private/hints/enable" : {
      "post" : {
        "tags" : [ "Hint" ],
        "summary" : "Enable hints",
        "description" : "Enables the hints to be presented to current user",
        "operationId" : "enableHints",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          }
        },
        "security" : [ {
          "Bearer Token" : [ ]
        } ]
      }
    },
    "/private/hints/disable" : {
      "post" : {
        "tags" : [ "Hint" ],
        "summary" : "Disable hints",
        "description" : "Disables the hints from to be presented to current user",
        "operationId" : "disableHints",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          }
        },
        "security" : [ {
          "Bearer Token" : [ ]
        } ]
      }
    },
    "/private/icons" : {
      "get" : {
        "tags" : [ "Icons" ],
        "operationId" : "getIcons",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "headers" : { },
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Icons" ],
        "operationId" : "createIcon",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Icon"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "headers" : { },
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          }
        }
      }
    },
    "/public/passwordReset/recover/{username}" : {
      "get" : {
        "tags" : [ "Password-Reset" ],
        "summary" : "Request password recovery",
        "description" : "Checks if the password can be recovered.",
        "operationId" : "recover",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "username",
          "in" : "path",
          "description" : "Login of the user who wants to recover the password",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          }
        }
      }
    },
    "/public/passwordReset/settings/{token}" : {
      "get" : {
        "tags" : [ "Password-Reset" ],
        "summary" : "Get settings by token",
        "description" : "Returns the user settings by password reset token.",
        "operationId" : "getSettings_1",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "token",
          "in" : "path",
          "description" : "Password reset token",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/User"
            }
          }
        }
      }
    },
    "/public/passwordReset/reset" : {
      "post" : {
        "tags" : [ "Password-Reset" ],
        "summary" : "Reset password",
        "description" : "Resets the user password",
        "operationId" : "updatePassword",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/User"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          }
        }
      }
    },
    "/public/passwordReset/canRecover" : {
      "get" : {
        "tags" : [ "Password-Reset" ],
        "summary" : "Password recovery feature",
        "description" : "Checks if the password can be recovered.",
        "operationId" : "canRecover",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          }
        }
      }
    },
    "/public/applications/upload" : {
      "post" : {
        "tags" : [ "Mobile client API" ],
        "summary" : "Upload application",
        "description" : "Uploads application specification to MDM server",
        "operationId" : "uploadFiles_1",
        "consumes" : [ "multipart/form-data" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "file",
          "in" : "formData",
          "required" : false,
          "type" : "file"
        }, {
          "name" : "app",
          "in" : "formData",
          "description" : "A JSON-string with application details",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          }
        }
      }
    },
    "/public/name" : {
      "get" : {
        "tags" : [ "Mobile client API" ],
        "summary" : "Get name and vendor",
        "description" : "Gets the application name and vendor for rebranding purposes.",
        "operationId" : "getRebranding",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          }
        }
      }
    },
    "/public/logo" : {
      "get" : {
        "tags" : [ "Mobile client API" ],
        "summary" : "Get logo",
        "description" : "Returns the rebranded logo.",
        "operationId" : "getRebrandedLogo",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/private/push" : {
      "post" : {
        "tags" : [ "Push API" ],
        "summary" : "Send a Push message",
        "description" : "Sends a Push message to specified devices.",
        "operationId" : "sendPush",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/PushRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          }
        },
        "security" : [ {
          "Bearer Token" : [ ]
        } ]
      }
    },
    "/public/qr/json/{id}" : {
      "get" : {
        "tags" : [ "QR-code" ],
        "summary" : "Get a JSON",
        "description" : "Gets the JSON for the specified configuration.",
        "operationId" : "generateJSON",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Configuration ID",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "query",
          "description" : "A device ID",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "create",
          "in" : "query",
          "description" : "Create on demand",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "useId",
          "in" : "query",
          "description" : "Which parameter to use as a device ID",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "group",
          "in" : "query",
          "description" : "Groups to assign when creating a device",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "500" : {
            "description" : "Internal server error"
          }
        }
      }
    },
    "/public/qr/{id}" : {
      "get" : {
        "tags" : [ "QR-code" ],
        "summary" : "Get QR-code",
        "description" : "Gets the QR code image for the specified configuration.",
        "operationId" : "generateQRCode",
        "produces" : [ "application/octet-stream" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Configuration ID",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "size",
          "in" : "query",
          "description" : "A size of the QR-code image",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "deviceId",
          "in" : "query",
          "description" : "A device ID",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "create",
          "in" : "query",
          "description" : "Create on demand",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "useId",
          "in" : "query",
          "description" : "Which parameter to use as a device ID",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "group",
          "in" : "query",
          "description" : "Groups to assign when creating a device",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "500" : {
            "description" : "Internal server error"
          }
        }
      }
    },
    "/private/settings" : {
      "get" : {
        "tags" : [ "Settings" ],
        "summary" : "Get settings",
        "description" : "Gets the current settings",
        "operationId" : "getSettings_2",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Settings"
            }
          }
        },
        "security" : [ {
          "Bearer Token" : [ ]
        } ]
      }
    },
    "/private/settings/userRoles/common" : {
      "post" : {
        "tags" : [ "Settings" ],
        "summary" : "Save user role common settings",
        "description" : "Save the settings for user roles",
        "operationId" : "updateUserRoleCommonSettings",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/UserRoleSettings"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Settings"
            }
          }
        },
        "security" : [ {
          "Bearer Token" : [ ]
        } ]
      }
    },
    "/private/settings/lang" : {
      "post" : {
        "tags" : [ "Settings" ],
        "summary" : "Save language settings",
        "description" : "Save the language settings for MDM web application",
        "operationId" : "updateLanguageSettings",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Settings"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Settings"
            }
          }
        },
        "security" : [ {
          "Bearer Token" : [ ]
        } ]
      }
    },
    "/private/settings/misc" : {
      "post" : {
        "tags" : [ "Settings" ],
        "summary" : "Save misc settings",
        "description" : "Save the misc settings for MDM web application",
        "operationId" : "updateMiscSettings",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Settings"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Settings"
            }
          }
        },
        "security" : [ {
          "Bearer Token" : [ ]
        } ]
      }
    },
    "/private/settings/userRole/{roleId}" : {
      "get" : {
        "tags" : [ "Settings" ],
        "summary" : "Get user role settings",
        "description" : "Gets the current settings for role of the current user",
        "operationId" : "getUserRoleSettings",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "roleId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/UserRoleSettings"
            }
          }
        },
        "security" : [ {
          "Bearer Token" : [ ]
        } ]
      }
    },
    "/private/settings/design" : {
      "post" : {
        "tags" : [ "Settings" ],
        "summary" : "Save default design",
        "description" : "Save the settings for Default Design for mobile application",
        "operationId" : "updateDefaultDesignSettings",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Settings"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Settings"
            }
          }
        },
        "security" : [ {
          "Bearer Token" : [ ]
        } ]
      }
    },
    "/public/sync/configuration/{deviceId}" : {
      "get" : {
        "tags" : [ "Device data synchronization" ],
        "summary" : "Get device settings",
        "description" : "Gets the device info and settings from the MDM server.",
        "operationId" : "getDeviceSetting",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "deviceId",
          "in" : "path",
          "description" : "An identifier of device within MDM server",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/SyncResponse"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Device data synchronization" ],
        "summary" : "Get device settings",
        "description" : "Gets the device info and settings from the MDM server.",
        "operationId" : "getDeviceSettingExtended",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/DeviceCreateOptions"
          }
        }, {
          "name" : "deviceId",
          "in" : "path",
          "description" : "An identifier of device within MDM server",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/SyncResponse"
            }
          }
        }
      }
    },
    "/public/sync/info" : {
      "post" : {
        "tags" : [ "Device data synchronization" ],
        "summary" : "Update device info",
        "description" : "Updates the device info on the MDM server.",
        "operationId" : "updateDeviceInfo",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/DeviceInfo"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          }
        }
      }
    },
    "/public/sync/applicationSettings/{deviceId}" : {
      "post" : {
        "tags" : [ "Device data synchronization" ],
        "summary" : "Save application settings",
        "description" : "Saves the application settings for the device on the MDM server.",
        "operationId" : "saveApplicationSettings",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "deviceId",
          "in" : "path",
          "description" : "An identifier of device within MDM server",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/SyncApplicationSetting"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          }
        }
      }
    },
    "/private/users/all" : {
      "get" : {
        "tags" : [ "User" ],
        "summary" : "List all users",
        "description" : "Gets the list of all existing user accounts",
        "operationId" : "getUsers",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "filter",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/User"
              }
            }
          }
        },
        "security" : [ {
          "Bearer Token" : [ ]
        } ]
      }
    },
    "/private/users/impersonate/{id}" : {
      "get" : {
        "tags" : [ "User" ],
        "operationId" : "login",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "headers" : { },
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          }
        },
        "security" : [ {
          "Bearer Token" : [ ]
        } ]
      }
    },
    "/private/users/{id}" : {
      "get" : {
        "tags" : [ "User" ],
        "summary" : "Get user details",
        "description" : "Returns the details for the user account referenced by the specified ID.",
        "operationId" : "getUserDetails",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "User ID",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/User"
            }
          }
        },
        "security" : [ {
          "Bearer Token" : [ ]
        } ]
      }
    },
    "/private/users/current" : {
      "get" : {
        "tags" : [ "User" ],
        "summary" : "Get current user details",
        "description" : "Returns the details for the current user account",
        "operationId" : "getCurrentUserDetails",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/User"
            }
          }
        },
        "security" : [ {
          "Bearer Token" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "User" ],
        "summary" : "Update password",
        "description" : "Updates the password for current user",
        "operationId" : "updatePassword_1",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/User"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/User"
            }
          }
        },
        "security" : [ {
          "Bearer Token" : [ ]
        } ]
      }
    },
    "/private/users" : {
      "put" : {
        "tags" : [ "User" ],
        "summary" : "Create or update user",
        "description" : "Creates a new user account (if id is not provided) or update existing one otherwise.",
        "operationId" : "updateUser",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/User"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          }
        },
        "security" : [ {
          "Bearer Token" : [ ]
        } ]
      }
    },
    "/private/users/other/{id}" : {
      "delete" : {
        "tags" : [ "User" ],
        "summary" : "Delete user",
        "description" : "Deletes a user account referenced by the specified ID",
        "operationId" : "deleteUser",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "User ID",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          }
        },
        "security" : [ {
          "Bearer Token" : [ ]
        } ]
      }
    },
    "/private/users/details" : {
      "put" : {
        "tags" : [ "User" ],
        "summary" : "Update user's details",
        "description" : "Update user's name and email.",
        "operationId" : "updateUserDetails",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/User"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          }
        },
        "security" : [ {
          "Bearer Token" : [ ]
        } ]
      }
    },
    "/private/users/roles" : {
      "get" : {
        "tags" : [ "User" ],
        "summary" : "List user roles",
        "description" : "Gets the list of all available user roles",
        "operationId" : "listUserRoles",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/UserRole"
              }
            }
          }
        },
        "security" : [ {
          "Bearer Token" : [ ]
        } ]
      }
    },
    "/public/jwt/login" : {
      "post" : {
        "tags" : [ "Authentication" ],
        "summary" : "Authenticate client",
        "description" : "Authenticates the client using provided credentials and responds with JWT token in case of success. The password field should contain the MD5 hash of the actual password. The returned JWT token must be included into 'Authorization' header for all sub-sequent requests from the same client.",
        "operationId" : "login_1",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UserCredentials"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "headers" : { },
            "schema" : {
              "$ref" : "#/definitions/JWTToken"
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "401" : {
            "description" : "Unauthorized"
          }
        }
      }
    }
  },
  "definitions" : {
    "PlainPushMessage" : {
      "type" : "object",
      "properties" : {
        "messageType" : {
          "type" : "string",
          "description" : "A type of the message"
        },
        "payload" : {
          "type" : "string",
          "description" : "A payload for the message"
        }
      },
      "description" : "A notification message"
    },
    "PaginatedData" : {
      "type" : "object",
      "properties" : {
        "items" : {
          "type" : "array",
          "description" : "A list of collection items for a single page",
          "items" : {
            "type" : "object"
          }
        },
        "totalItemsCount" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "A total number of items in collection"
        }
      },
      "description" : "Paginated data"
    },
    "AuditLogFilter" : {
      "type" : "object",
      "properties" : {
        "pageSize" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "A number of records per single page of data to be retrieved"
        },
        "pageNum" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "A number of page of data to be retrieved (1-based)"
        },
        "messageFilter" : {
          "type" : "string",
          "description" : "A filter used for filtering the data records by message"
        },
        "userFilter" : {
          "type" : "string",
          "description" : "A filter used for filtering the data records by user"
        },
        "dateFrom" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "A timestamp for FROM boundary for filtering the data records by dates"
        },
        "dateTo" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "A timestamp for TO boundary for filtering the data records by dates"
        },
        "dateFromMillis" : {
          "type" : "integer",
          "format" : "int64"
        },
        "dateToMillis" : {
          "type" : "integer",
          "format" : "int64"
        }
      },
      "description" : "The parameters for filtering the lists of audit log record objects"
    },
    "DeviceLogPluginSettings" : {
      "type" : "object",
      "required" : [ "logsPreservePeriod", "rules" ],
      "properties" : {
        "logsPreservePeriod" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "A period for preserving the log records in persistent data store (in days)"
        },
        "rules" : {
          "type" : "array",
          "description" : "A list of device log rules",
          "items" : {
            "$ref" : "#/definitions/DeviceLogRule"
          }
        },
        "identifier" : {
          "type" : "string"
        }
      },
      "description" : "A collection of 'Device Log' plugin settings"
    },
    "DeviceLogRule" : {
      "type" : "object",
      "required" : [ "active", "applicationId", "configurationId", "groupId", "name" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "A name of the rule"
        },
        "active" : {
          "type" : "boolean",
          "description" : "A flag indicating if rule is active"
        },
        "applicationId" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "An ID referencing the application"
        },
        "severity" : {
          "type" : "string",
          "description" : "A severity level",
          "enum" : [ "NONE", "ERROR", "WARNING", "INFO", "DEBUG", "VERBOSE" ]
        },
        "filter" : {
          "type" : "string",
          "description" : "A filter for log rule"
        },
        "groupId" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "An ID referencing the device group"
        },
        "configurationId" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "An ID referencing the configuration"
        },
        "applicationPkg" : {
          "type" : "string",
          "description" : "A package ID for application"
        },
        "groupName" : {
          "type" : "string",
          "description" : "A name of the device group"
        },
        "configurationName" : {
          "type" : "string",
          "description" : "A name of the configuration"
        },
        "devices" : {
          "type" : "array",
          "description" : "A list of devices related to rules",
          "items" : {
            "$ref" : "#/definitions/LookupItem"
          }
        },
        "identifier" : {
          "type" : "string"
        }
      },
      "description" : "A single rule for device log"
    },
    "LookupItem" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int32"
        },
        "name" : {
          "type" : "string"
        }
      }
    },
    "Response" : {
      "type" : "object",
      "properties" : {
        "status" : {
          "type" : "string",
          "description" : "A status of the server response.",
          "enum" : [ "OK", "WARNING", "ERROR" ]
        },
        "message" : {
          "type" : "string",
          "description" : "An optional message related to status."
        },
        "data" : {
          "type" : "object",
          "description" : "A data requested by client."
        }
      },
      "description" : "A response from the application to request from client. The actual type of 'data' is specific to request."
    },
    "DeviceLogFilter" : {
      "type" : "object",
      "properties" : {
        "pageSize" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "A number of records per single page of data to be retrieved"
        },
        "pageNum" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "A number of page of data to be retrieved (1-based)"
        },
        "deviceFilter" : {
          "type" : "string",
          "description" : "A filter used for filtering the data records by device"
        },
        "messageFilter" : {
          "type" : "string",
          "description" : "A filter used for filtering the data records by message"
        },
        "dateFrom" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "A timestamp for FROM boundary for filtering the data records by dates"
        },
        "dateTo" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "A timestamp for TO boundary for filtering the data records by dates"
        },
        "applicationFilter" : {
          "type" : "string",
          "description" : "A package ID of an application for filtering the data records by application"
        },
        "severity" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "A severity for filtering the data records"
        },
        "sortValue" : {
          "type" : "string",
          "description" : "A name of sorting column"
        },
        "dateFromMillis" : {
          "type" : "integer",
          "format" : "int64"
        },
        "dateToMillis" : {
          "type" : "integer",
          "format" : "int64"
        }
      },
      "description" : "The parameters for filtering the lists of device log record objects"
    },
    "UploadedDeviceLogRecord" : {
      "type" : "object",
      "properties" : {
        "timestamp" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "A timestamp of creation of log record (in milliseconds since epoch time"
        },
        "packageId" : {
          "type" : "string",
          "description" : "A package ID of an application related to log record"
        },
        "logLevel" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "A severity for log record"
        },
        "message" : {
          "type" : "string",
          "description" : "A message for log record"
        }
      }
    },
    "AppliedDeviceLogRule" : {
      "type" : "object",
      "properties" : {
        "packageId" : {
          "type" : "string",
          "description" : "A package ID for application"
        },
        "logLevel" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "A severity level"
        },
        "filter" : {
          "type" : "string",
          "description" : "A filter for log rule"
        }
      },
      "description" : "The parameters for filtering the lists of device log record objects"
    },
    "MessageFilter" : {
      "type" : "object",
      "properties" : {
        "pageSize" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "A number of records per single page of data to be retrieved"
        },
        "pageNum" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "A number of page of data to be retrieved (1-based)"
        },
        "deviceFilter" : {
          "type" : "string",
          "description" : "A filter used for filtering the data records by device"
        },
        "messageFilter" : {
          "type" : "string",
          "description" : "A filter used for filtering the data records by message"
        },
        "dateFrom" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "A timestamp for FROM boundary for filtering the data records by dates"
        },
        "dateTo" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "A timestamp for TO boundary for filtering the data records by dates"
        },
        "status" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "A status for filtering the data records"
        },
        "sortValue" : {
          "type" : "string",
          "description" : "A name of sorting column"
        },
        "dateFromMillis" : {
          "type" : "integer",
          "format" : "int64"
        },
        "dateToMillis" : {
          "type" : "integer",
          "format" : "int64"
        }
      },
      "description" : "The parameters for filtering the lists of message objects"
    },
    "SendRequest" : {
      "type" : "object",
      "properties" : {
        "scope" : {
          "type" : "string"
        },
        "deviceNumber" : {
          "type" : "string"
        },
        "groupId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "configurationId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "message" : {
          "type" : "string"
        }
      }
    },
    "Application" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "An application ID"
        },
        "name" : {
          "type" : "string",
          "description" : "A name of application"
        },
        "pkg" : {
          "type" : "string",
          "description" : "A package ID of application"
        },
        "version" : {
          "type" : "string",
          "description" : "A version of application"
        },
        "arch" : {
          "type" : "string",
          "description" : "CPU architecture (for file transfer only)"
        },
        "url" : {
          "type" : "string",
          "description" : "An URL for the latest version of the application package"
        },
        "split" : {
          "type" : "boolean",
          "description" : "Has the latest version native code, i.e. is split into two APKs"
        },
        "urlArmeabi" : {
          "type" : "string",
          "description" : "An URL for armeabi APK for the latest version"
        },
        "urlArm64" : {
          "type" : "string",
          "description" : "An URL for arm64 APK for the latest version"
        },
        "showIcon" : {
          "type" : "boolean",
          "description" : "A flag indicating if icon is to be shown on mobile device"
        },
        "useKiosk" : {
          "type" : "boolean",
          "description" : "A flag indicating if the web application must run in Kiosk Browser"
        },
        "system" : {
          "type" : "boolean",
          "description" : "A flag indicating if application is a system application"
        },
        "configurations" : {
          "type" : "array",
          "description" : "A list of configurations using the application",
          "items" : {
            "$ref" : "#/definitions/Configuration"
          }
        },
        "latestVersion" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "An ID of a most recent version for application"
        },
        "runAfterInstall" : {
          "type" : "boolean",
          "description" : "A flag indicating if application must be run after installation"
        },
        "runAtBoot" : {
          "type" : "boolean",
          "description" : "A flag indicating if application must be run at device boot"
        },
        "skipVersion" : {
          "type" : "boolean",
          "description" : "A flag indicating if version check must be skipped for application"
        },
        "iconText" : {
          "type" : "string",
          "description" : "A text for the application icon"
        },
        "type" : {
          "type" : "string",
          "description" : "A type of the application icon",
          "enum" : [ "app", "web" ]
        },
        "iconId" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "An ID of an icon to represent the application"
        },
        "icon" : {
          "type" : "string",
          "description" : "An file name with the icon to represent the application"
        },
        "screenOrder" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Order of applications on the screen"
        },
        "keyCode" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Key code for fast app start"
        },
        "bottom" : {
          "type" : "boolean",
          "description" : "A flag indicating if application must be displayed at the bottom of the launcher"
        },
        "action" : {
          "type" : "integer",
          "format" : "int32",
          "enum" : [ 0, 1, 2 ]
        }
      },
      "description" : "A specification of a single application installed and used on mobile device"
    },
    "ApplicationSetting" : {
      "type" : "object",
      "required" : [ "applicationId", "extRefId", "name", "readonly", "type" ],
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "An ID of a setting record"
        },
        "applicationId" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "An ID of application"
        },
        "name" : {
          "type" : "string",
          "description" : "A name of the setting"
        },
        "type" : {
          "type" : "string",
          "description" : "A type of the application setting",
          "enum" : [ "STRING", "INTEGER", "BOOLEAN" ]
        },
        "value" : {
          "type" : "string",
          "description" : "A value of the setting"
        },
        "comment" : {
          "type" : "string",
          "description" : "A comment on the setting"
        },
        "lastUpdate" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "A timestamp of the last update of the setting"
        },
        "readonly" : {
          "type" : "boolean",
          "description" : "A flag indicating if setting can not be modified on device"
        },
        "extRefId" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "An ID of the external object (device, configuration) which settings belong to"
        }
      },
      "description" : "A single setting for an application installed and used on mobile device"
    },
    "Configuration" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "A configuration ID"
        },
        "name" : {
          "type" : "string",
          "description" : "A unique name of configuration"
        },
        "description" : {
          "type" : "string",
          "description" : "A description of configuration"
        },
        "password" : {
          "type" : "string",
          "description" : "A password for administrator of configuration (MD5 hash)"
        },
        "applications" : {
          "type" : "array",
          "description" : "A list of applications set for configuration",
          "items" : {
            "$ref" : "#/definitions/Application"
          }
        },
        "blockStatusBar" : {
          "type" : "boolean",
          "description" : "A flag indicating if status bar is locked"
        },
        "systemUpdateType" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "A system update type. 0-Default, 1-Immediately, 2-Scheduled, 3-Postponed",
          "enum" : [ 0, 1, 2, 3 ]
        },
        "systemUpdateFrom" : {
          "type" : "string",
          "description" : "A start time for system update period formatted as HH:MM. (If system update time is 2)"
        },
        "systemUpdateTo" : {
          "type" : "string",
          "description" : "An end time for system update period formatted as HH:MM. (If system update time is 2)"
        },
        "scheduleAppUpdate" : {
          "type" : "boolean",
          "description" : "A flag indicating if the application update must be scheduled"
        },
        "appUpdateFrom" : {
          "type" : "string",
          "description" : "A start time for app update period formatted as HH:MM."
        },
        "appUpdateTo" : {
          "type" : "string",
          "description" : "An end time for system update period formatted as HH:MM."
        },
        "gps" : {
          "type" : "boolean",
          "description" : "A flag indicating if GPS is enabled on device"
        },
        "bluetooth" : {
          "type" : "boolean",
          "description" : "A flag indicating if Bluetooth is enabled on device"
        },
        "wifi" : {
          "type" : "boolean",
          "description" : "A flag indicating if Wi-Fi is enabled on device"
        },
        "mobileData" : {
          "type" : "boolean",
          "description" : "A flag indicating if Mobile Data is enabled on device"
        },
        "usbStorage" : {
          "type" : "boolean",
          "description" : "A flag indicating if USB storage is enabled on device"
        },
        "requestUpdates" : {
          "type" : "string",
          "description" : "A type of location tracking",
          "enum" : [ "DONOTTRACK", "GPS", "WIFI" ]
        },
        "pushOptions" : {
          "type" : "string",
          "description" : "Push notification options"
        },
        "keepaliveTime" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Keep-Alive time for MQTT connection"
        },
        "autoBrightness" : {
          "type" : "boolean",
          "description" : "Brightness management flag. null: not managed, false: manual, true: auto"
        },
        "brightness" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Brightness value (if manual), 0-255"
        },
        "manageTimeout" : {
          "type" : "boolean",
          "description" : "A flag indicating if screen timeout is managed on device"
        },
        "timeout" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Timeout value (in seconds)"
        },
        "lockVolume" : {
          "type" : "boolean",
          "description" : "A flag indicating if volume is locked on device"
        },
        "manageVolume" : {
          "type" : "boolean",
          "description" : "A flag indicating if volume must be adjusted on device"
        },
        "volume" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Volume value (in percents)"
        },
        "passwordMode" : {
          "type" : "string",
          "description" : "Password requirements for the mobile device"
        },
        "orientation" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Orientation lock: 0 - none, 1 - portrait, 2 - landscape"
        },
        "runDefaultLauncher" : {
          "type" : "boolean",
          "description" : "Flag enabling usage with default launcher"
        },
        "disableScreenshots" : {
          "type" : "boolean",
          "description" : "Flag indicating if screenshots are disabled on the device"
        },
        "timeZone" : {
          "type" : "string",
          "description" : "Time zone settings: null for using default settings, auto for automatic time zone, or Olson time zone string"
        },
        "allowedClasses" : {
          "type" : "string",
          "description" : "Allowed classes, separated by comma"
        },
        "newServerUrl" : {
          "type" : "string",
          "description" : "New server URL used to migrate to another server"
        },
        "lockSafeSettings" : {
          "type" : "boolean",
          "description" : "Flag disabling safe settings"
        },
        "showWifi" : {
          "type" : "boolean",
          "description" : "Show WiFi settings if there's a connection error, also in Kiosk mode"
        },
        "mainAppId" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "A package ID for main application"
        },
        "eventReceivingComponent" : {
          "type" : "string",
          "description" : "A package ID for event receiving component"
        },
        "kioskMode" : {
          "type" : "boolean",
          "description" : "A flag indicating if MDM is operating in kiosk mode"
        },
        "contentAppId" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "A package ID for content application"
        },
        "wifiSSID" : {
          "type" : "string",
          "description" : "WiFi SSID for provisioning"
        },
        "wifiPassword" : {
          "type" : "string",
          "description" : "WiFi password for provisioning"
        },
        "wifiSecurityType" : {
          "type" : "string",
          "description" : "WiFi security type for provisioning: NONE/WPA/WEP/EAP"
        },
        "mobileEnrollment" : {
          "type" : "boolean",
          "description" : "Prefer mobile data for provisioning"
        },
        "kioskHome" : {
          "type" : "boolean",
          "description" : "Flag enabling Home button in kiosk mode"
        },
        "kioskRecents" : {
          "type" : "boolean",
          "description" : "Flag enabling Recents button in kiosk mode"
        },
        "kioskNotifications" : {
          "type" : "boolean",
          "description" : "Flag enabling notifications in kiosk mode"
        },
        "kioskSystemInfo" : {
          "type" : "boolean",
          "description" : "Flag enabling system info in kiosk mode"
        },
        "kioskKeyguard" : {
          "type" : "boolean",
          "description" : "Flag enabling lock screen in kiosk mode"
        },
        "kioskLockButtons" : {
          "type" : "boolean",
          "description" : "Flag locking power button in kiosk mode"
        },
        "restrictions" : {
          "type" : "string",
          "description" : "Additional comma separated restrictions in MDM mode"
        },
        "useDefaultDesignSettings" : {
          "type" : "boolean"
        },
        "backgroundColor" : {
          "type" : "string",
          "description" : "A background color to use when running MDM application"
        },
        "textColor" : {
          "type" : "string",
          "description" : "A text color to use when running MDM application"
        },
        "backgroundImageUrl" : {
          "type" : "string",
          "description" : "An URL for background image to use when running MDM application"
        },
        "iconSize" : {
          "type" : "string",
          "description" : "A size of the icons to use when running MDM application",
          "enum" : [ "SMALL", "MEDIUM", "LARGE" ]
        },
        "desktopHeader" : {
          "type" : "string",
          "description" : "A type of desktop header to use when running MDM application",
          "enum" : [ "NO_HEADER", "DEVICE_ID", "DESCRIPTION", "CUSTOM1", "CUSTOM2", "CUSTOM3", "TEMPLATE" ]
        },
        "desktopHeaderTemplate" : {
          "type" : "string",
          "description" : "Desktop header template"
        },
        "applicationSettings" : {
          "type" : "array",
          "description" : "A list of settings for applications set for configuration",
          "items" : {
            "$ref" : "#/definitions/ApplicationSetting"
          }
        },
        "files" : {
          "type" : "array",
          "description" : "A list of files to be used on devices",
          "items" : {
            "$ref" : "#/definitions/ConfigurationFile"
          }
        },
        "applicationUsageParameters" : {
          "type" : "array",
          "description" : "The parameters for using applications set for configuration",
          "items" : {
            "$ref" : "#/definitions/ConfigurationApplicationParameters"
          }
        }
      },
      "description" : "An MDM configuration used on mobile device"
    },
    "ConfigurationApplicationParameters" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "A record ID"
        },
        "configurationId" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "A configuration ID"
        },
        "applicationId" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "An application ID"
        },
        "skipVersionCheck" : {
          "type" : "boolean",
          "description" : "A flag indicating if version check must be skipped on device"
        }
      },
      "description" : "A collection of parameters for linking the single application to single configuration"
    },
    "ConfigurationFile" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "A configuration file ID"
        },
        "description" : {
          "type" : "string",
          "description" : "A description of the file"
        },
        "checksum" : {
          "type" : "string",
          "description" : "A checksum for the file content"
        },
        "remove" : {
          "type" : "boolean",
          "description" : "A flag indicating if file is to be removed from the device or not"
        },
        "lastUpdate" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "A timestamp of file uploading to server (in milliseconds since epoch time)"
        },
        "url" : {
          "type" : "string",
          "description" : "An URL referencing the content of the file"
        },
        "replaceVariables" : {
          "type" : "boolean",
          "description" : "A flag indicating whether the file content must be updated by device-specific values"
        },
        "path" : {
          "type" : "string",
          "description" : "A path to a file on device"
        }
      },
      "description" : "A configuration file to be sent to mobile device for usage"
    },
    "ApplicationVersion" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "An application version ID"
        },
        "applicationId" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "An application ID"
        },
        "version" : {
          "type" : "string",
          "description" : "A version of application"
        },
        "url" : {
          "type" : "string",
          "description" : "An URL for application package"
        },
        "split" : {
          "type" : "boolean",
          "description" : "Has the APK native code, i.e. is split into two APKs"
        },
        "urlArmeabi" : {
          "type" : "string",
          "description" : "An URL for armeabi APK"
        },
        "urlArm64" : {
          "type" : "string",
          "description" : "An URL for arm64 APK"
        }
      },
      "description" : "A specification of a single application version installed and used on mobile device"
    },
    "ApplicationConfigurationLink" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "An ID of a link between the application and configuration. May be null if those are not linked"
        },
        "customerId" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "An ID of a customer account which both the application and configuration belong to"
        },
        "configurationId" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "An ID of a configuration"
        },
        "configurationName" : {
          "type" : "string",
          "description" : "A name of a configuration"
        },
        "applicationId" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "An ID of an application"
        },
        "applicationName" : {
          "type" : "string",
          "description" : "A name of an application"
        },
        "action" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "An action required to be performed by mobile device in regard to application installation",
          "enum" : [ 0, 1, 2 ]
        },
        "showIcon" : {
          "type" : "boolean",
          "description" : "A flag indicating if icon is to be shown on mobile device"
        },
        "remove" : {
          "type" : "boolean",
          "description" : "A flag indicating that application is to be removed from the application"
        },
        "outdated" : {
          "type" : "boolean",
          "description" : "A flag indicating if more recent version of application exists"
        },
        "latestVersionText" : {
          "type" : "string",
          "description" : "A latest version of the application"
        },
        "currentVersionText" : {
          "type" : "string",
          "description" : "A current version of the application as set for configuration"
        }
      },
      "description" : "A link between the single application and single configuration"
    },
    "LinkConfigurationsToAppRequest" : {
      "type" : "object",
      "properties" : {
        "applicationId" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "An ID of an application to link configurations to"
        },
        "configurations" : {
          "type" : "array",
          "description" : "A list of configurations to link to application",
          "items" : {
            "$ref" : "#/definitions/ApplicationConfigurationLink"
          }
        }
      },
      "description" : "A request to setup links between the single application and listed configurations"
    },
    "ApplicationVersionConfigurationLink" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "An ID of a link between the application and configuration. May be null if those are not linked"
        },
        "customerId" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "An ID of a customer account which both the application and configuration belong to"
        },
        "configurationId" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "An ID of a configuration"
        },
        "configurationName" : {
          "type" : "string",
          "description" : "A name of a configuration"
        },
        "applicationId" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "An ID of an application"
        },
        "applicationName" : {
          "type" : "string",
          "description" : "A name of an application"
        },
        "applicationVersionId" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "An ID of an application version"
        },
        "versionText" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "A version text of an application version"
        },
        "showIcon" : {
          "type" : "boolean",
          "description" : "A flag indicating if icon is to be shown on mobile device"
        },
        "screenOrder" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Order of applications on the screen"
        },
        "keyCode" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Key code for fast app start"
        },
        "bottom" : {
          "type" : "boolean",
          "description" : "A flag indicating if application must be displayed at the bottom of the launcher"
        },
        "action" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "An action required to be performed by mobile device in regard to application installation",
          "enum" : [ 0, 1, 2 ]
        },
        "remove" : {
          "type" : "boolean",
          "description" : "A flag indicating that application is to be removed from the application"
        }
      },
      "description" : "A link between the single application version and single configuration"
    },
    "LinkConfigurationsToAppVersionRequest" : {
      "type" : "object",
      "properties" : {
        "applicationVersionId" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "An ID of an application version to link configurations to"
        },
        "configurations" : {
          "type" : "array",
          "description" : "A list of configurations to link to application version",
          "items" : {
            "$ref" : "#/definitions/ApplicationVersionConfigurationLink"
          }
        }
      },
      "description" : "A request to setup links between the single application version and listed configurations"
    },
    "UpgradeConfigurationApplicationRequest" : {
      "type" : "object",
      "properties" : {
        "configurationId" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "An ID of a configuration to upgrade application for"
        },
        "applicationId" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "An ID of an application to upgrade"
        }
      },
      "description" : "A request to upgrade application for configuration up to recent version"
    },
    "ApplicationView" : {
      "type" : "object",
      "properties" : {
        "version" : {
          "type" : "string",
          "description" : "A version of application"
        },
        "name" : {
          "type" : "string",
          "description" : "A name of application"
        },
        "id" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "An application ID"
        },
        "action" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The action required to be performed by mobile device",
          "enum" : [ 0, 1, 2 ]
        },
        "pkg" : {
          "type" : "string",
          "description" : "A package ID of application"
        },
        "url" : {
          "type" : "string",
          "description" : "An URL for application package"
        },
        "selected" : {
          "type" : "boolean",
          "description" : "A flag indicating if application is used in device configuration"
        },
        "skipVersion" : {
          "type" : "boolean",
          "description" : "A flag indicating if application version shouldnt be checked"
        }
      },
      "description" : "A specification of a single application available for usage on mobile device"
    },
    "ConfigurationFileView" : {
      "type" : "object",
      "properties" : {
        "lastUpdate" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "A timestamp of file uploading to server (in milliseconds since epoch time)"
        },
        "remove" : {
          "type" : "boolean",
          "description" : "A flag indicating if file is to be removed from the device or not"
        },
        "path" : {
          "type" : "string",
          "description" : "A path to a file on device",
          "readOnly" : true
        }
      },
      "description" : "A specification of a single configuration file available for usage on mobile device"
    },
    "ConfigurationView" : {
      "type" : "object",
      "properties" : {
        "applications" : {
          "type" : "array",
          "description" : "A list of applications set and available for for configuration",
          "items" : {
            "$ref" : "#/definitions/ApplicationView"
          }
        },
        "files" : {
          "type" : "array",
          "description" : "A list of configrration files to be set on device",
          "items" : {
            "$ref" : "#/definitions/ConfigurationFileView"
          }
        },
        "name" : {
          "type" : "string",
          "description" : "A unique name of configuration"
        },
        "id" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "A configuration ID"
        },
        "qrCodeKey" : {
          "type" : "string",
          "description" : "QR code to enroll the configuration"
        }
      },
      "description" : "An MDM configuration used on mobile device"
    },
    "DeviceApplicationView" : {
      "type" : "object",
      "properties" : {
        "version" : {
          "type" : "string",
          "description" : "A version of application"
        },
        "pkg" : {
          "type" : "string",
          "description" : "A package ID of application"
        }
      },
      "description" : "A specification of a single application installed and used on mobile device"
    },
    "DeviceConfigurationFile" : {
      "type" : "object",
      "properties" : {
        "path" : {
          "type" : "string",
          "description" : "A path to file on device"
        },
        "remove" : {
          "type" : "boolean",
          "description" : "A flag indicating if file is to be removed from the device or not"
        },
        "lastUpdate" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "A timestamp of file uploading to server (in milliseconds since epoch time)"
        }
      }
    },
    "DeviceInfoView" : {
      "type" : "object",
      "properties" : {
        "files" : {
          "type" : "array",
          "description" : "A list of configuration files installed on device",
          "items" : {
            "$ref" : "#/definitions/DeviceConfigurationFile"
          }
        },
        "permissions" : {
          "type" : "array",
          "description" : "A list of permissions set for device. Contains exactly three elements (each either 0 or 1).",
          "items" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "deviceId" : {
          "type" : "string",
          "description" : "A textual identifier of device within MDM server (e.g. device number)"
        },
        "imei" : {
          "type" : "string",
          "description" : "An IMEI identifier for device"
        },
        "batteryLevel" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "A battery level in percents",
          "minimum" : 0,
          "maximum" : 100
        },
        "model" : {
          "type" : "string",
          "description" : "A name of the device model"
        },
        "applications" : {
          "type" : "array",
          "description" : "A list of applications installed on device",
          "items" : {
            "$ref" : "#/definitions/DeviceApplicationView"
          }
        },
        "phone" : {
          "type" : "string",
          "description" : "A phone number for device"
        },
        "defaultLauncher" : {
          "type" : "boolean",
          "description" : "A flag showing if Headwind MDM is set as default launcher on a device"
        }
      },
      "description" : "The details related to a single device. Such details are sent from the MDM mobile application to MDM server"
    },
    "DeviceListView" : {
      "type" : "object",
      "properties" : {
        "configurations" : {
          "type" : "object",
          "additionalProperties" : {
            "$ref" : "#/definitions/ConfigurationView"
          }
        },
        "devices" : {
          "$ref" : "#/definitions/PaginatedDataDeviceView"
        }
      },
      "description" : "The list of devices with configurations lookup"
    },
    "DeviceView" : {
      "type" : "object",
      "properties" : {
        "number" : {
          "type" : "string",
          "description" : "An unique textual identifier of device"
        },
        "id" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "An ID of device"
        },
        "statusCode" : {
          "type" : "string",
          "description" : "A color coding the current status of the device",
          "enum" : [ "green", "red", "yellow", "brown", "grey" ]
        },
        "info" : {
          "description" : "An info on device state submitted by device to MDM server",
          "$ref" : "#/definitions/DeviceInfoView"
        },
        "description" : {
          "type" : "string",
          "description" : "A description of device"
        },
        "groups" : {
          "type" : "array",
          "description" : "A list of groups assigned to device",
          "items" : {
            "$ref" : "#/definitions/LookupItem"
          }
        },
        "oldNumber" : {
          "type" : "string",
          "description" : "Old device number, used when the number is changed"
        },
        "configurationId" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "An ID of configuration for device"
        },
        "custom1" : {
          "type" : "string",
          "description" : "Custom property #1"
        },
        "custom2" : {
          "type" : "string",
          "description" : "Custom property #2"
        },
        "custom3" : {
          "type" : "string",
          "description" : "Custom property #3"
        },
        "imei" : {
          "type" : "string",
          "description" : "An IMEI of device as set by the administrator"
        },
        "lastUpdate" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "A date of last synchronization of device state (in milliseconds since epoch time)"
        },
        "phone" : {
          "type" : "string",
          "description" : "A phone number of device as set by the administrator"
        },
        "launcherVersion" : {
          "type" : "string",
          "description" : "A version number for Launcher application installed on device"
        },
        "launcherPkg" : {
          "type" : "string",
          "description" : "A package ID for Launcher application installed on device"
        }
      },
      "description" : "A device registered to MDM server and running the MDM mobile application"
    },
    "PaginatedDataDeviceView" : {
      "type" : "object",
      "properties" : {
        "items" : {
          "type" : "array",
          "description" : "A list of collection items for a single page",
          "items" : {
            "$ref" : "#/definitions/DeviceView"
          }
        },
        "totalItemsCount" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "A total number of items in collection"
        }
      },
      "description" : "Paginated data"
    },
    "DeviceSearchRequest" : {
      "type" : "object",
      "properties" : {
        "value" : {
          "type" : "string",
          "description" : "A filter to search devices"
        },
        "groupId" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "An ID of a group to search devices for"
        },
        "configurationId" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "An ID of a configuration to search devices for"
        },
        "pageSize" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "A number of records per single page of data to be retrieved"
        },
        "pageNum" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "A number of page of data to be retrieved (1-based)"
        },
        "sortBy" : {
          "type" : "string",
          "description" : "A column to sort devices list by",
          "enum" : [ "STATUS", "LAST_UPDATE", "NUMBER", "IMEI", "PHONE", "MODEL", "PERMISSIONS", "INSTALLATIONS", "FILES", "CONFIGURATION", "DESCRIPTION", "GROUP", "LAUNCHER_VERSION", "BATTERY_LEVEL", "DEFAULT_LAUNCHER" ]
        },
        "sortDir" : {
          "type" : "string",
          "description" : "A direction to sort devices list by"
        },
        "dateFrom" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "A timestamp for FROM boundary for filtering the data records by dates"
        },
        "dateTo" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "A timestamp for TO boundary for filtering the data records by dates"
        },
        "launcherVersion" : {
          "type" : "string",
          "description" : "A filter for launcher version"
        },
        "installationStatus" : {
          "type" : "string",
          "description" : "A filter for application installation status",
          "enum" : [ "SUCCESS", "VERSION_MISMATCH", "FAILURE" ]
        },
        "imeiChanged" : {
          "type" : "boolean",
          "description" : "A filter for recent IMEI change"
        },
        "fastSearch" : {
          "type" : "boolean",
          "description" : "Flag of fast searching by device number"
        },
        "dateFromMillis" : {
          "type" : "integer",
          "format" : "int64"
        },
        "dateToMillis" : {
          "type" : "integer",
          "format" : "int64"
        }
      },
      "description" : "A request for searching the devices"
    },
    "Device" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "An ID of device"
        },
        "number" : {
          "type" : "string",
          "description" : "An unique textual identifier of device"
        },
        "description" : {
          "type" : "string",
          "description" : "A description of device"
        },
        "lastUpdate" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "A date of last synchronization of device state"
        },
        "configurationId" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "An ID of configuration for device"
        },
        "info" : {
          "type" : "string",
          "description" : "An info on device state submitted by device to MDM server"
        },
        "imei" : {
          "type" : "string",
          "description" : "An IMEM of device"
        },
        "phone" : {
          "type" : "string",
          "description" : "A phone number of device"
        },
        "imeiUpdateTs" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "A date of last IMEI change"
        },
        "custom1" : {
          "type" : "string",
          "description" : "Custom property #1"
        },
        "custom2" : {
          "type" : "string",
          "description" : "Custom property #2"
        },
        "custom3" : {
          "type" : "string",
          "description" : "Custom property #3"
        },
        "groups" : {
          "type" : "array",
          "description" : "A list of groups assigned to device",
          "items" : {
            "$ref" : "#/definitions/LookupItem"
          }
        },
        "oldNumber" : {
          "type" : "string",
          "description" : "Old device number, used when the number is changed"
        },
        "fastSearch" : {
          "type" : "string",
          "description" : "Last characters of the device number used for fast search"
        }
      },
      "description" : "A device registered to MDM server and running the MDM mobile application"
    },
    "HFile" : {
      "type" : "object",
      "properties" : {
        "path" : {
          "type" : "string",
          "description" : "A path to a file"
        },
        "name" : {
          "type" : "string",
          "description" : "A name of file"
        },
        "url" : {
          "type" : "string",
          "description" : "An URL of file"
        },
        "usedByApps" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "usedByIcons" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "usedByConfigurations" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      },
      "description" : "A single file maintained by the MDM server"
    },
    "MoveFileRequest" : {
      "type" : "object",
      "properties" : {
        "path" : {
          "type" : "string"
        },
        "localPath" : {
          "type" : "string"
        }
      }
    },
    "APKFileDetails" : {
      "type" : "object",
      "properties" : {
        "pkg" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        },
        "arch" : {
          "type" : "string"
        }
      }
    },
    "FileUploadResult" : {
      "type" : "object",
      "properties" : {
        "serverPath" : {
          "type" : "string"
        },
        "fileDetails" : {
          "$ref" : "#/definitions/APKFileDetails"
        },
        "application" : {
          "$ref" : "#/definitions/Application"
        },
        "complete" : {
          "type" : "boolean"
        },
        "exists" : {
          "type" : "boolean"
        }
      }
    },
    "Group" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "A group ID"
        },
        "name" : {
          "type" : "string",
          "description" : "A group name"
        }
      },
      "description" : "A group of devices"
    },
    "Icon" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "An application ID"
        },
        "name" : {
          "type" : "string",
          "description" : "A name of the icon"
        },
        "fileId" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "An ID of an uploaded file storing the content of the icon"
        }
      },
      "description" : "A specification of a single icon used to represent an application on mobile device"
    },
    "User" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "An ID of a user"
        },
        "login" : {
          "type" : "string",
          "description" : "A username of a user"
        },
        "email" : {
          "type" : "string",
          "description" : "An email address of a user"
        },
        "name" : {
          "type" : "string",
          "description" : "A name of a user"
        },
        "password" : {
          "type" : "string",
          "description" : "A password of a user (Salted SHA1 hash)"
        },
        "userRole" : {
          "description" : "A role assigned to user",
          "$ref" : "#/definitions/UserRole"
        },
        "allDevicesAvailable" : {
          "type" : "boolean",
          "description" : "Are all devices available to user"
        },
        "allConfigAvailable" : {
          "type" : "boolean",
          "description" : "Are all configs available to user"
        },
        "passwordReset" : {
          "type" : "boolean",
          "description" : "Is password reset required"
        },
        "authToken" : {
          "type" : "string",
          "description" : "Authentication token"
        },
        "passwordResetToken" : {
          "type" : "string",
          "description" : "Password reset token"
        },
        "groups" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/LookupItem"
          }
        },
        "configurations" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/LookupItem"
          }
        },
        "oldPassword" : {
          "type" : "string",
          "description" : "An old password for user to be used for verification when changing the password"
        },
        "newPassword" : {
          "type" : "string",
          "description" : "A new password to be set for user"
        },
        "superAdmin" : {
          "type" : "boolean"
        }
      },
      "description" : "A user account within MDM web application"
    },
    "UserRole" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "A user role ID"
        },
        "name" : {
          "type" : "string",
          "description" : "A user role name"
        },
        "description" : {
          "type" : "string",
          "description" : "A user role description"
        },
        "permissions" : {
          "type" : "array",
          "description" : "A list of permissions granted to user role",
          "items" : {
            "$ref" : "#/definitions/UserRolePermission"
          }
        }
      },
      "description" : "A role of user within MDM web application"
    },
    "UserRolePermission" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "An ID of the permission"
        },
        "name" : {
          "type" : "string",
          "description" : "A name of the permission"
        },
        "description" : {
          "type" : "string",
          "description" : "A description of the permission"
        }
      },
      "description" : "A permission to perform desired action which might be granted to user role"
    },
    "PushRequest" : {
      "type" : "object",
      "properties" : {
        "messageType" : {
          "type" : "string"
        },
        "payload" : {
          "type" : "string"
        },
        "deviceNumbers" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "groups" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "broadcast" : {
          "type" : "boolean"
        }
      },
      "description" : "Request to send Push messages to specified devices/groups"
    },
    "Settings" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "An ID of a settings record"
        },
        "backgroundColor" : {
          "type" : "string",
          "description" : "A background color for Default Design of mobile application"
        },
        "textColor" : {
          "type" : "string",
          "description" : "A text color for Default Design of mobile application"
        },
        "backgroundImageUrl" : {
          "type" : "string",
          "description" : "An URL for background image color for Default Design of mobile application"
        },
        "iconSize" : {
          "type" : "string",
          "description" : "A size of the icons for Default Design of mobile application",
          "enum" : [ "SMALL", "MEDIUM", "LARGE" ]
        },
        "desktopHeader" : {
          "type" : "string",
          "description" : "A type of desktop header for Default Design of mobile application",
          "enum" : [ "NO_HEADER", "DEVICE_ID", "DESCRIPTION", "CUSTOM1", "CUSTOM2", "CUSTOM3", "TEMPLATE" ]
        },
        "desktopHeaderTemplate" : {
          "type" : "string",
          "description" : "Desktop header template for Default Design of mobile application"
        },
        "useDefaultLanguage" : {
          "type" : "boolean",
          "description" : "A flag indicating if browser-dependent language is to be used for content localization"
        },
        "language" : {
          "type" : "string",
          "description" : "A combination of language and country codes used for content localization (e.g. 'en_US')"
        },
        "createNewDevices" : {
          "type" : "boolean",
          "description" : "Flag indicating if the new devices must be created on first access"
        },
        "newDeviceGroupId" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Default group for the new devices"
        },
        "newDeviceConfigurationId" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Default configuration for the new devices"
        },
        "phoneNumberFormat" : {
          "type" : "string",
          "description" : "Phone number format"
        },
        "customPropertyName1" : {
          "type" : "string",
          "description" : "Custom property name 1"
        },
        "customPropertyName2" : {
          "type" : "string",
          "description" : "Custom property name 2"
        },
        "customPropertyName3" : {
          "type" : "string",
          "description" : "Custom property name 3"
        },
        "customMultiline1" : {
          "type" : "boolean",
          "description" : "Is custom property 1 multiline"
        },
        "customMultiline2" : {
          "type" : "boolean",
          "description" : "Is custom property 2 multiline"
        },
        "customMultiline3" : {
          "type" : "boolean",
          "description" : "Is custom property 3 multiline"
        },
        "customSend1" : {
          "type" : "boolean",
          "description" : "Send custom property 1 to device"
        },
        "customSend2" : {
          "type" : "boolean",
          "description" : "Send custom property 2 to device"
        },
        "customSend3" : {
          "type" : "boolean",
          "description" : "Send custom property 3 to device"
        },
        "sendDescription" : {
          "type" : "boolean",
          "description" : "Send description to device"
        },
        "passwordReset" : {
          "type" : "boolean",
          "description" : "Request password reset to new users"
        },
        "passwordLength" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Minimal password length for users"
        },
        "passwordStrength" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Password strength for users (0 - none, 1 - alphanumeric, 2 - alphanumeric + special characters"
        }
      },
      "description" : "The settings for MDM web application"
    },
    "UserRoleSettings" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "An ID of a settings record"
        },
        "roleId" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "An ID of a user role"
        },
        "columnDisplayedDeviceStatus" : {
          "type" : "boolean",
          "description" : "A flag indicating if Device Status column to be displayed in MDM web application"
        },
        "columnDisplayedDeviceDate" : {
          "type" : "boolean",
          "description" : "A flag indicating if Device Update Date column to be displayed in MDM web application"
        },
        "columnDisplayedDeviceNumber" : {
          "type" : "boolean",
          "description" : "A flag indicating if Device Nummber column to be displayed in MDM web application"
        },
        "columnDisplayedDeviceModel" : {
          "type" : "boolean",
          "description" : "A flag indicating if Device Model column to be displayed in MDM web application"
        },
        "columnDisplayedDevicePermissionsStatus" : {
          "type" : "boolean",
          "description" : "A flag indicating if Device Permissions column to be displayed in MDM web application"
        },
        "columnDisplayedDeviceAppInstallStatus" : {
          "type" : "boolean",
          "description" : "A flag indicating if Device Apps column to be displayed in MDM web application"
        },
        "columnDisplayedDeviceFilesStatus" : {
          "type" : "boolean",
          "description" : "A flag indicating if Device Files column to be displayed in MDM web application"
        },
        "columnDisplayedDeviceConfiguration" : {
          "type" : "boolean",
          "description" : "A flag indicating if Device Configuration column to be displayed in MDM web application"
        },
        "columnDisplayedDeviceImei" : {
          "type" : "boolean",
          "description" : "A flag indicating if Device IMEI column to be displayed in MDM web application"
        },
        "columnDisplayedDevicePhone" : {
          "type" : "boolean",
          "description" : "A flag indicating if Device Phone column to be displayed in MDM web application"
        },
        "columnDisplayedDeviceDesc" : {
          "type" : "boolean",
          "description" : "A flag indicating if Device Description column to be displayed in MDM web application"
        },
        "columnDisplayedDeviceGroup" : {
          "type" : "boolean",
          "description" : "A flag indicating if Device Group column to be displayed in MDM web application"
        },
        "columnDisplayedLauncherVersion" : {
          "type" : "boolean",
          "description" : "A flag indicating if Launcher Version column to be displayed in MDM web application"
        },
        "columnDisplayedBatteryLevel" : {
          "type" : "boolean",
          "description" : "A flag indicating if Battery Level column to be displayed in MDM web application"
        },
        "columnDisplayedDefaultLauncher" : {
          "type" : "boolean",
          "description" : "A flag indicating if Headwind MDM is set as default launcher"
        },
        "columnDisplayedCustom1" : {
          "type" : "boolean",
          "description" : "A flag indicating if custom property #1 column must be displayed in the Devices table"
        },
        "columnDisplayedCustom2" : {
          "type" : "boolean",
          "description" : "A flag indicating if custom property #2 column must be displayed in the Devices table"
        },
        "columnDisplayedCustom3" : {
          "type" : "boolean",
          "description" : "A flag indicating if custom property #3 column must be displayed in the Devices table"
        }
      },
      "description" : "The settings for single user role at customer level"
    },
    "SyncApplicationInt" : {
      "type" : "object",
      "properties" : {
        "system" : {
          "type" : "boolean"
        },
        "version" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "id" : {
          "type" : "integer",
          "format" : "int32"
        },
        "type" : {
          "type" : "string",
          "enum" : [ "app", "web" ]
        },
        "pkg" : {
          "type" : "string"
        },
        "showIcon" : {
          "type" : "boolean"
        },
        "useKiosk" : {
          "type" : "boolean"
        },
        "runAfterInstall" : {
          "type" : "boolean"
        },
        "runAtBoot" : {
          "type" : "boolean"
        },
        "url" : {
          "type" : "string"
        },
        "icon" : {
          "type" : "string"
        },
        "remove" : {
          "type" : "boolean"
        },
        "skipVersion" : {
          "type" : "boolean"
        },
        "iconText" : {
          "type" : "string"
        },
        "screenOrder" : {
          "type" : "integer",
          "format" : "int32"
        },
        "keyCode" : {
          "type" : "integer",
          "format" : "int32"
        },
        "bottom" : {
          "type" : "boolean"
        }
      }
    },
    "SyncApplicationSettingInt" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        },
        "type" : {
          "type" : "integer",
          "format" : "int32"
        },
        "packageId" : {
          "type" : "string"
        },
        "readonly" : {
          "type" : "boolean"
        },
        "lastUpdate" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "SyncConfigurationFileInt" : {
      "type" : "object",
      "properties" : {
        "path" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "url" : {
          "type" : "string"
        },
        "lastUpdate" : {
          "type" : "integer",
          "format" : "int64"
        },
        "checksum" : {
          "type" : "string"
        },
        "remove" : {
          "type" : "boolean"
        },
        "varContent" : {
          "type" : "boolean"
        }
      }
    },
    "SyncResponse" : {
      "type" : "object",
      "properties" : {
        "backgroundColor" : {
          "type" : "string",
          "description" : "A background color to use when running MDM application"
        },
        "textColor" : {
          "type" : "string",
          "description" : "A text color to use when running MDM application"
        },
        "backgroundImageUrl" : {
          "type" : "string",
          "description" : "An URL for background image to use when running MDM application"
        },
        "iconSize" : {
          "type" : "string",
          "description" : "A size of the icons to use when running MDM application"
        },
        "requestUpdates" : {
          "type" : "string",
          "description" : "A type of location tracking"
        },
        "pushOptions" : {
          "type" : "string",
          "description" : "Push notification options"
        },
        "keepaliveTime" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Keep-Alive time for MQTT connection"
        },
        "autoBrightness" : {
          "type" : "boolean",
          "description" : "Brightness management option"
        },
        "brightness" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Brightness value (0-255)"
        },
        "manageTimeout" : {
          "type" : "boolean",
          "description" : "Timeout management option"
        },
        "timeout" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Timeout value (sec)"
        },
        "lockVolume" : {
          "type" : "boolean",
          "description" : "Volume lock option"
        },
        "manageVolume" : {
          "type" : "boolean",
          "description" : "Volume manage option"
        },
        "volume" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Volume (percents)"
        },
        "passwordMode" : {
          "type" : "string",
          "description" : "Password requirements for the mobile device"
        },
        "orientation" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Orientation lock: 0 - none, 1 - portrait, 2 - landscape"
        },
        "runDefaultLauncher" : {
          "type" : "boolean",
          "description" : "Set to true if Headwind MDM need to work together with a third-party launcher"
        },
        "disableScreenshots" : {
          "type" : "boolean",
          "description" : "Flag indicating if screenshots are disabled on the device"
        },
        "timeZone" : {
          "type" : "string",
          "description" : "Time zone settings: null for using default settings, auto for automatic time zone, or Olson time zone string"
        },
        "allowedClasses" : {
          "type" : "string",
          "description" : "Allowed classes, separated by comma"
        },
        "newServerUrl" : {
          "type" : "string",
          "description" : "New server URL used to migrate to another server"
        },
        "lockSafeSettings" : {
          "type" : "boolean",
          "description" : "Flag disabling safe settings"
        },
        "showWifi" : {
          "type" : "boolean",
          "description" : "Show WiFi settings if there's a connection error, also in Kiosk mode"
        },
        "password" : {
          "type" : "string",
          "description" : "A password for administrator of MDM application used on device"
        },
        "imei" : {
          "type" : "string",
          "description" : "An IMEI of device"
        },
        "phone" : {
          "type" : "string",
          "description" : "A phone number of device"
        },
        "title" : {
          "type" : "string",
          "description" : "A displayed title of the MDM application used on device"
        },
        "applications" : {
          "type" : "array",
          "description" : "A list of applications to be used on device",
          "items" : {
            "$ref" : "#/definitions/SyncApplicationInt"
          }
        },
        "gps" : {
          "type" : "boolean",
          "description" : "A flag indicating if GPS is enabled on device"
        },
        "bluetooth" : {
          "type" : "boolean",
          "description" : "A flag indicating if Bluetooth is enabled on device"
        },
        "wifi" : {
          "type" : "boolean",
          "description" : "A flag indicating if Wi-Fi is enabled on device"
        },
        "mobileData" : {
          "type" : "boolean",
          "description" : "A flag indicating if Mobile Data is enabled on device"
        },
        "usbStorage" : {
          "type" : "boolean",
          "description" : "A flag indicating if USB storage is enabled on device"
        },
        "kioskMode" : {
          "type" : "boolean",
          "description" : "A flag indicating if MDM is operating in kiosk mode"
        },
        "kioskHome" : {
          "type" : "boolean",
          "description" : "Flag enabling Home button in kiosk mode"
        },
        "kioskRecents" : {
          "type" : "boolean",
          "description" : "Flag enabling Recents button in kiosk mode"
        },
        "kioskNotifications" : {
          "type" : "boolean",
          "description" : "Flag enabling notifications in kiosk mode"
        },
        "kioskSystemInfo" : {
          "type" : "boolean",
          "description" : "Flag enabling system info in kiosk mode"
        },
        "kioskKeyguard" : {
          "type" : "boolean",
          "description" : "Flag enabling lock screen in kiosk mode"
        },
        "kioskLockButtons" : {
          "type" : "boolean",
          "description" : "Flag disabling power button in kiosk mode"
        },
        "lockStatusBar" : {
          "type" : "boolean",
          "description" : "A flag indicating if status bar is locked"
        },
        "mainApp" : {
          "type" : "string",
          "description" : "A package ID for the main application"
        },
        "systemUpdateType" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "A system update type. 0-Default, 1-Immediately, 2-Scheduled, 3-Postponed",
          "enum" : [ 0, 1, 2, 3 ]
        },
        "systemUpdateFrom" : {
          "type" : "string",
          "description" : "A start time for system update period formatted as HH:MM. (If system update time is 2)"
        },
        "systemUpdateTo" : {
          "type" : "string",
          "description" : "A finish time for system update period formatted as HH:MM. (If system update time is 2)"
        },
        "scheduleAppUpdate" : {
          "type" : "boolean",
          "description" : "A flag indicating if the application update must be scheduled"
        },
        "appUpdateFrom" : {
          "type" : "string",
          "description" : "A start time for app update period formatted as HH:MM."
        },
        "appUpdateTo" : {
          "type" : "string",
          "description" : "A finish time for app update period formatted as HH:MM."
        },
        "applicationSettings" : {
          "type" : "array",
          "description" : "A list of application settings to apply on device",
          "items" : {
            "$ref" : "#/definitions/SyncApplicationSettingInt"
          }
        },
        "files" : {
          "type" : "array",
          "description" : "A list of files to apply on device",
          "items" : {
            "$ref" : "#/definitions/SyncConfigurationFileInt"
          }
        },
        "newNumber" : {
          "type" : "string",
          "description" : "New device number, used for changing the device number"
        },
        "restrictions" : {
          "type" : "string",
          "description" : "List of additional restrictions in MDM mode"
        },
        "custom1" : {
          "type" : "string",
          "description" : "Custom property #1 if it is being sent to device"
        },
        "custom2" : {
          "type" : "string",
          "description" : "Custom property #2 if it is being sent to device"
        },
        "custom3" : {
          "type" : "string",
          "description" : "Custom property #3 if it is being sent to device"
        },
        "appName" : {
          "type" : "string"
        },
        "vendor" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        }
      },
      "description" : "The details and settings for a single device used for configuring MDM mobile application"
    },
    "DeviceCreateOptions" : {
      "type" : "object",
      "properties" : {
        "customer" : {
          "type" : "string",
          "description" : "Customer name"
        },
        "configuration" : {
          "type" : "string",
          "description" : "Configuration for the new device"
        },
        "groups" : {
          "type" : "array",
          "description" : "Groups for the new device",
          "items" : {
            "type" : "string"
          }
        }
      },
      "description" : "Options applied when a device must be created on demand"
    },
    "DeviceInfo" : {
      "type" : "object",
      "properties" : {
        "model" : {
          "type" : "string",
          "description" : "A name of the device model"
        },
        "permissions" : {
          "type" : "array",
          "description" : "A list of permissions set for device",
          "items" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "applications" : {
          "type" : "array",
          "description" : "A list of applications installed on device",
          "items" : {
            "$ref" : "#/definitions/Application"
          }
        },
        "files" : {
          "type" : "array",
          "description" : "A list of configuraiton files installed on device",
          "items" : {
            "$ref" : "#/definitions/DeviceConfigurationFile"
          }
        },
        "deviceId" : {
          "type" : "string",
          "description" : "An identifier of device within MDM server"
        },
        "imei" : {
          "type" : "string",
          "description" : "An IMEI identifier"
        },
        "phone" : {
          "type" : "string",
          "description" : "A phone number"
        },
        "batteryLevel" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "A battery level in percents",
          "minimum" : 0,
          "maximum" : 100
        },
        "batteryCharging" : {
          "type" : "string",
          "description" : "A battery charge type",
          "allowEmptyValue" : true,
          "enum" : [ "usb", "ac" ]
        },
        "androidVersion" : {
          "type" : "string",
          "description" : "Android OS version"
        },
        "mdmMode" : {
          "type" : "boolean",
          "description" : "A flag indicating if MDM mode is ON or not"
        },
        "location" : {
          "description" : "The details on device location",
          "$ref" : "#/definitions/DeviceLocation"
        },
        "launcherType" : {
          "type" : "string",
          "description" : "Headwind MDM launcher build variant"
        },
        "launcherPackage" : {
          "type" : "string",
          "description" : "Package of default launcher on the device"
        },
        "defaultLauncher" : {
          "type" : "boolean",
          "description" : "Is Headwind MDM a default launcher"
        },
        "iccid" : {
          "type" : "string",
          "description" : "ICC ID"
        },
        "imsi" : {
          "type" : "string",
          "description" : "an IMSI identifier"
        },
        "imei2" : {
          "type" : "string",
          "description" : "An IMEI identifier for 2nd SIM slot"
        },
        "phone2" : {
          "type" : "string",
          "description" : "A phone number for 2nd SIM slot"
        },
        "iccid2" : {
          "type" : "string",
          "description" : "ICC ID for 2nd SIM slot"
        },
        "imsi2" : {
          "type" : "string",
          "description" : "an IMSI identifier for 2nd SIM slot"
        },
        "serial" : {
          "type" : "string",
          "description" : "A device serial number"
        },
        "cpu" : {
          "type" : "string",
          "description" : "CPU architecture"
        },
        "custom1" : {
          "type" : "string",
          "description" : "Custom property #1"
        },
        "custom2" : {
          "type" : "string",
          "description" : "Custom property #2"
        },
        "custom3" : {
          "type" : "string",
          "description" : "Custom property #3"
        }
      },
      "description" : "The details related to a single device. Such details are sent from the MDM mobile application to MDM server"
    },
    "DeviceLocation" : {
      "type" : "object",
      "required" : [ "lat", "lon", "ts" ],
      "properties" : {
        "lat" : {
          "type" : "number",
          "format" : "double",
          "description" : "A latitude coordinate"
        },
        "lon" : {
          "type" : "number",
          "format" : "double",
          "description" : "A longitude coordinate"
        },
        "ts" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "A timestamp of location recording by device (in milliseconds since epoch time)"
        }
      },
      "description" : "The latest device location"
    },
    "SyncApplicationSetting" : {
      "type" : "object",
      "required" : [ "name", "packageId", "readonly", "type" ],
      "properties" : {
        "packageId" : {
          "type" : "string",
          "description" : "A package of the application"
        },
        "name" : {
          "type" : "string",
          "description" : "A name of the setting"
        },
        "type" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "A type of the application setting. 1 - String, 2 - Integer, 3 - Boolean",
          "enum" : [ 1, 2, 3 ]
        },
        "value" : {
          "type" : "string",
          "description" : "A value of the setting"
        },
        "readonly" : {
          "type" : "boolean",
          "description" : "A flag indicating if setting can not be modified on device"
        },
        "lastUpdate" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "A timestamp of the last update of the setting (in milliseconds since epoch time"
        }
      },
      "description" : "A single setting for an application installed and used on mobile device and used in data sycnhronization between mobile device and server application"
    },
    "JWTToken" : {
      "type" : "object",
      "properties" : {
        "id_token" : {
          "type" : "string",
          "description" : "A token value"
        }
      },
      "description" : "A JWT token identifying a single client of the application"
    },
    "UserCredentials" : {
      "type" : "object",
      "properties" : {
        "login" : {
          "type" : "string",
          "description" : "A username to be used for authentication"
        },
        "password" : {
          "type" : "string",
          "description" : "A password to be used for authentication (MD5-hash)"
        }
      },
      "description" : "The credentials to be used for authenticating the user to application"
    }
  }
}